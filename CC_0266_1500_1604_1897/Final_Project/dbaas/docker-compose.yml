version: '3.1'

services:
  rabbitmq:
    container_name: "rabbitmq"
    hostname: "rabbitmq"
    ports:  
         - "15672:15672"  
         - "5672:5672"     
    labels:       
       NAME: "rabbitmq"
    image: rabbitmq:3.8.3-alpine

  
  zookeeper:
    container_name: "zookeeper"
    image: zookeeper
    restart: on-failure
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181

  master:
    container_name: "master"
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 20 && python worker.py"
    ports:
      - "8001:8000"
    environment:
      - container_type=master
      - container_name=master
    volumes:
    - ./queries.txt:/code/queries.txt
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure
  
  slave:
    container_name: "slave"
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 20 && python worker.py"
    ports:
      - "8002:8000"
    environment:
      - container_type=slave
      - container_name=slave
    volumes:
    - ./queries.txt:/code/queries.txt
    - /var/run/docker.sock:/var/run/docker.sock
    - /usr/bin/docker:/usr/bin/docker
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure

  orchestrator:
    container_name: "orchestrator"
    build:
        context: .
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python orchestrator.py"
    ports:
      - "80:8000"
    volumes:
        - ./queries.txt:/code/queries.txt
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/bin/docker:/usr/bin/docker
    links:
    - rabbitmq
    - zookeeper
    depends_on:
    - rabbitmq
    - zookeeper
    restart: on-failure 





  
